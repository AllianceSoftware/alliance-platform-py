# Generated by Django 3.2.15 on 2022-09-01 05:54

from django.db import migrations
import pgtrigger.compiler
import pgtrigger.migrations


class Migration(migrations.Migration):
    dependencies = [
        ("test_common_audit", "0004_auditevents_related_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="test_common_audit_Shop_payment_methods_accepted_AuditEventProxy",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("test_common_audit.shop_payment_methods_accepted",),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="authorprofile",
            trigger=pgtrigger.compiler.Trigger(
                name="test_common_audit_authorprofile_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='\n                INSERT INTO "test_common_audit_author_profile_auditevent"\n                    ("profile_ptr_id", "homepage", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_context_id") VALUES (NEW."profile_ptr_id", NEW."homepage", NOW(), \'CREATE\', NEW."profile_ptr_id", _pgh_attach_context());\n                RETURN NULL;\n            ',
                    hash="57e3245b968be659b0b2084c3ae801a904d7cbca",
                    operation="INSERT",
                    pgid="pgtrigger_test_common_audit_authorprofile_insert_219ac",
                    table="test_common_audit_author_profile",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="authorprofile",
            trigger=pgtrigger.compiler.Trigger(
                name="test_common_audit_authorprofile_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."profile_ptr_id" IS DISTINCT FROM NEW."profile_ptr_id" OR OLD."homepage" IS DISTINCT FROM NEW."homepage")',
                    func='\n                INSERT INTO "test_common_audit_author_profile_auditevent"\n                    ("profile_ptr_id", "homepage", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_context_id") VALUES (NEW."profile_ptr_id", NEW."homepage", NOW(), \'UPDATE\', NEW."profile_ptr_id", _pgh_attach_context());\n                RETURN NULL;\n            ',
                    hash="ea1fe44ebb779b5ae512354d8defea15953aac6b",
                    operation="UPDATE",
                    pgid="pgtrigger_test_common_audit_authorprofile_update_953cd",
                    table="test_common_audit_author_profile",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="authorprofile",
            trigger=pgtrigger.compiler.Trigger(
                name="test_common_audit_authorprofile_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='\n                INSERT INTO "test_common_audit_author_profile_auditevent"\n                    ("profile_ptr_id", "homepage", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_context_id") VALUES (OLD."profile_ptr_id", OLD."homepage", NOW(), \'DELETE\', OLD."profile_ptr_id", _pgh_attach_context());\n                RETURN NULL;\n            ',
                    hash="c10acf26ca4194ef65a3b145ee49a27cf0a49030",
                    operation="DELETE",
                    pgid="pgtrigger_test_common_audit_authorprofile_delete_96361",
                    table="test_common_audit_author_profile",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="authorprofileauditevent",
            trigger=pgtrigger.compiler.Trigger(
                name="test_common_audit_authba19bb37_set_previous",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="NEW.pgh_previous_id = (SELECT max(pgh_id) from test_common_audit_author_profile_auditevent where pgh_obj_id = NEW.pgh_obj_id); RETURN NEW;",
                    hash="6adbe839a667deed132f19a7ba134a0e9b92c7ff",
                    operation="INSERT",
                    pgid="pgtrigger_test_common_audit_authba19bb37_set_previous_29bf9",
                    table="test_common_audit_author_profile_auditevent",
                    when="BEFORE",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="memberprofile",
            trigger=pgtrigger.compiler.Trigger(
                name="test_common_audit_memberprofile_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='\n                INSERT INTO "test_common_audit_member_profile_auditevent"\n                    ("profile_ptr_id", "member_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_context_id") VALUES (NEW."profile_ptr_id", NEW."member_id", NOW(), \'CREATE\', NEW."profile_ptr_id", _pgh_attach_context());\n                RETURN NULL;\n            ',
                    hash="4e160bdcea3a8105151990a0e40cbed8a8081d99",
                    operation="INSERT",
                    pgid="pgtrigger_test_common_audit_memberprofile_insert_af7dd",
                    table="test_common_audit_member_profile",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="memberprofile",
            trigger=pgtrigger.compiler.Trigger(
                name="test_common_audit_memberprofile_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."profile_ptr_id" IS DISTINCT FROM NEW."profile_ptr_id" OR OLD."member_id" IS DISTINCT FROM NEW."member_id")',
                    func='\n                INSERT INTO "test_common_audit_member_profile_auditevent"\n                    ("profile_ptr_id", "member_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_context_id") VALUES (NEW."profile_ptr_id", NEW."member_id", NOW(), \'UPDATE\', NEW."profile_ptr_id", _pgh_attach_context());\n                RETURN NULL;\n            ',
                    hash="1de6627cbe40fe2715ce3bf79925620e2f79c289",
                    operation="UPDATE",
                    pgid="pgtrigger_test_common_audit_memberprofile_update_b380d",
                    table="test_common_audit_member_profile",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="memberprofile",
            trigger=pgtrigger.compiler.Trigger(
                name="test_common_audit_memberprofile_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='\n                INSERT INTO "test_common_audit_member_profile_auditevent"\n                    ("profile_ptr_id", "member_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_context_id") VALUES (OLD."profile_ptr_id", OLD."member_id", NOW(), \'DELETE\', OLD."profile_ptr_id", _pgh_attach_context());\n                RETURN NULL;\n            ',
                    hash="0edc8d41748ae0c15c4d2bf0f50583d4c14b279c",
                    operation="DELETE",
                    pgid="pgtrigger_test_common_audit_memberprofile_delete_e6717",
                    table="test_common_audit_member_profile",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="memberprofileauditevent",
            trigger=pgtrigger.compiler.Trigger(
                name="test_common_audit_membb314db13_set_previous",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="NEW.pgh_previous_id = (SELECT max(pgh_id) from test_common_audit_member_profile_auditevent where pgh_obj_id = NEW.pgh_obj_id); RETURN NEW;",
                    hash="7eab5621f319912e11647d05905b79ea4695e48c",
                    operation="INSERT",
                    pgid="pgtrigger_test_common_audit_membb314db13_set_previous_f2a04",
                    table="test_common_audit_member_profile_auditevent",
                    when="BEFORE",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="paymentmethod",
            trigger=pgtrigger.compiler.Trigger(
                name="test_common_audit_paymentmethod_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='\n                INSERT INTO "test_common_audit_payment_method_auditevent"\n                    ("name", "id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_context_id") VALUES (NEW."name", NEW."id", NOW(), \'CREATE\', NEW."id", _pgh_attach_context());\n                RETURN NULL;\n            ',
                    hash="e9e185502c9d051c1fd037e593891f6dc3e120d3",
                    operation="INSERT",
                    pgid="pgtrigger_test_common_audit_paymentmethod_insert_bd358",
                    table="test_common_audit_payment_method",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="paymentmethod",
            trigger=pgtrigger.compiler.Trigger(
                name="test_common_audit_paymentmethod_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."name" IS DISTINCT FROM NEW."name" OR OLD."id" IS DISTINCT FROM NEW."id")',
                    func='\n                INSERT INTO "test_common_audit_payment_method_auditevent"\n                    ("name", "id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_context_id") VALUES (NEW."name", NEW."id", NOW(), \'UPDATE\', NEW."id", _pgh_attach_context());\n                RETURN NULL;\n            ',
                    hash="2e6a44fa65952f58c696c2f028a5f0406083d027",
                    operation="UPDATE",
                    pgid="pgtrigger_test_common_audit_paymentmethod_update_f8de6",
                    table="test_common_audit_payment_method",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="paymentmethod",
            trigger=pgtrigger.compiler.Trigger(
                name="test_common_audit_paymentmethod_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='\n                INSERT INTO "test_common_audit_payment_method_auditevent"\n                    ("name", "id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_context_id") VALUES (OLD."name", OLD."id", NOW(), \'DELETE\', OLD."id", _pgh_attach_context());\n                RETURN NULL;\n            ',
                    hash="d91d69cd551edad1c1b1e82b78480f9317bf5d1c",
                    operation="DELETE",
                    pgid="pgtrigger_test_common_audit_paymentmethod_delete_b18b9",
                    table="test_common_audit_payment_method",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="paymentmethodauditevent",
            trigger=pgtrigger.compiler.Trigger(
                name="test_common_audit_paymc25f99a4_set_previous",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="NEW.pgh_previous_id = (SELECT max(pgh_id) from test_common_audit_payment_method_auditevent where pgh_obj_id = NEW.pgh_obj_id); RETURN NEW;",
                    hash="090d445cb0d256e31de995aa0b1e85956272ca86",
                    operation="INSERT",
                    pgid="pgtrigger_test_common_audit_paymc25f99a4_set_previous_a3416",
                    table="test_common_audit_payment_method_auditevent",
                    when="BEFORE",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="plaza",
            trigger=pgtrigger.compiler.Trigger(
                name="test_common_audit_plaza_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='\n                INSERT INTO "test_common_audit_plaza_auditevent"\n                    ("name", "id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_context_id") VALUES (NEW."name", NEW."id", NOW(), \'CREATE\', NEW."id", _pgh_attach_context());\n                RETURN NULL;\n            ',
                    hash="aeee73237c9a924fc4cdcb34726c23f39233d600",
                    operation="INSERT",
                    pgid="pgtrigger_test_common_audit_plaza_insert_1320d",
                    table="test_common_audit_plaza",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="plaza",
            trigger=pgtrigger.compiler.Trigger(
                name="test_common_audit_plaza_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."name" IS DISTINCT FROM NEW."name" OR OLD."id" IS DISTINCT FROM NEW."id")',
                    func='\n                INSERT INTO "test_common_audit_plaza_auditevent"\n                    ("name", "id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_context_id") VALUES (NEW."name", NEW."id", NOW(), \'UPDATE\', NEW."id", _pgh_attach_context());\n                RETURN NULL;\n            ',
                    hash="ab444a4aad87c8bca4dcddfc82e442cb9a3459da",
                    operation="UPDATE",
                    pgid="pgtrigger_test_common_audit_plaza_update_225ee",
                    table="test_common_audit_plaza",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="plaza",
            trigger=pgtrigger.compiler.Trigger(
                name="test_common_audit_plaza_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='\n                INSERT INTO "test_common_audit_plaza_auditevent"\n                    ("name", "id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_context_id") VALUES (OLD."name", OLD."id", NOW(), \'DELETE\', OLD."id", _pgh_attach_context());\n                RETURN NULL;\n            ',
                    hash="4c4be9aaf9da34256177bb8d094235055d5704d1",
                    operation="DELETE",
                    pgid="pgtrigger_test_common_audit_plaza_delete_be5e3",
                    table="test_common_audit_plaza",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="plazaauditevent",
            trigger=pgtrigger.compiler.Trigger(
                name="test_common_audit_plaza_set_previous",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="NEW.pgh_previous_id = (SELECT max(pgh_id) from test_common_audit_plaza_auditevent where pgh_obj_id = NEW.pgh_obj_id); RETURN NEW;",
                    hash="7e70b08861ea7cf97613df58ecadc4fece0328d2",
                    operation="INSERT",
                    pgid="pgtrigger_test_common_audit_plaza_set_previous_2f388",
                    table="test_common_audit_plaza_auditevent",
                    when="BEFORE",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="profile",
            trigger=pgtrigger.compiler.Trigger(
                name="test_common_audit_profile_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='\n                INSERT INTO "test_common_audit_profile_auditevent"\n                    ("name", "id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_context_id") VALUES (NEW."name", NEW."id", NOW(), \'CREATE\', NEW."id", _pgh_attach_context());\n                RETURN NULL;\n            ',
                    hash="f7aee067955903ca4e2d661c6859e8a2547da8b3",
                    operation="INSERT",
                    pgid="pgtrigger_test_common_audit_profile_insert_03215",
                    table="test_common_audit_profile",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="profile",
            trigger=pgtrigger.compiler.Trigger(
                name="test_common_audit_profile_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."name" IS DISTINCT FROM NEW."name" OR OLD."id" IS DISTINCT FROM NEW."id")',
                    func='\n                INSERT INTO "test_common_audit_profile_auditevent"\n                    ("name", "id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_context_id") VALUES (NEW."name", NEW."id", NOW(), \'UPDATE\', NEW."id", _pgh_attach_context());\n                RETURN NULL;\n            ',
                    hash="cc9d4cbad4abb7886287b026b66ee746cd954b3e",
                    operation="UPDATE",
                    pgid="pgtrigger_test_common_audit_profile_update_c769c",
                    table="test_common_audit_profile",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="profile",
            trigger=pgtrigger.compiler.Trigger(
                name="test_common_audit_profile_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='\n                INSERT INTO "test_common_audit_profile_auditevent"\n                    ("name", "id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_context_id") VALUES (OLD."name", OLD."id", NOW(), \'DELETE\', OLD."id", _pgh_attach_context());\n                RETURN NULL;\n            ',
                    hash="3d82ebf5e17482b118d6f61272c25d14c92ad329",
                    operation="DELETE",
                    pgid="pgtrigger_test_common_audit_profile_delete_39f27",
                    table="test_common_audit_profile",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="profileauditevent",
            trigger=pgtrigger.compiler.Trigger(
                name="test_common_audit_profile_set_previous",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="NEW.pgh_previous_id = (SELECT max(pgh_id) from test_common_audit_profile_auditevent where pgh_obj_id = NEW.pgh_obj_id); RETURN NEW;",
                    hash="0cbdc6ba873b9836bdb535c31ade49a2c89c40f8",
                    operation="INSERT",
                    pgid="pgtrigger_test_common_audit_profile_set_previous_f2de3",
                    table="test_common_audit_profile_auditevent",
                    when="BEFORE",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="shop",
            trigger=pgtrigger.compiler.Trigger(
                name="test_common_audit_shop_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='\n                INSERT INTO "test_common_audit_shop_auditevent"\n                    ("name", "plaza_id", "category", "id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_context_id", "payment_methods_accepted") VALUES (NEW."name", NEW."plaza_id", NEW."category", NEW."id", NOW(), \'CREATE\', NEW."id", _pgh_attach_context(), (\n                SELECT "payment_methods_accepted"\n                FROM "test_common_audit_shop_auditevent"\n                WHERE pgh_id=(\n                    SELECT max(pgh_id) from test_common_audit_shop_auditevent where pgh_obj_id = NEW."id"\n                    )\n                ));\n                RETURN NULL;\n            ',
                    hash="528dbc6a763f68bdec55c8c27f78361b083d67fe",
                    operation="INSERT",
                    pgid="pgtrigger_test_common_audit_shop_insert_9a42e",
                    table="test_common_audit_shop",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="shop",
            trigger=pgtrigger.compiler.Trigger(
                name="test_common_audit_shop_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."name" IS DISTINCT FROM NEW."name" OR OLD."plaza_id" IS DISTINCT FROM NEW."plaza_id" OR OLD."category" IS DISTINCT FROM NEW."category" OR OLD."id" IS DISTINCT FROM NEW."id")',
                    func='\n                INSERT INTO "test_common_audit_shop_auditevent"\n                    ("name", "plaza_id", "category", "id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_context_id", "payment_methods_accepted") VALUES (NEW."name", NEW."plaza_id", NEW."category", NEW."id", NOW(), \'UPDATE\', NEW."id", _pgh_attach_context(), (\n                SELECT "payment_methods_accepted"\n                FROM "test_common_audit_shop_auditevent"\n                WHERE pgh_id=(\n                    SELECT max(pgh_id) from test_common_audit_shop_auditevent where pgh_obj_id = NEW."id"\n                    )\n                ));\n                RETURN NULL;\n            ',
                    hash="f865cfccece66780017bde3d279d2b88bde53b6b",
                    operation="UPDATE",
                    pgid="pgtrigger_test_common_audit_shop_update_15b7b",
                    table="test_common_audit_shop",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="shop",
            trigger=pgtrigger.compiler.Trigger(
                name="test_common_audit_shop_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='\n                INSERT INTO "test_common_audit_shop_auditevent"\n                    ("name", "plaza_id", "category", "id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_context_id", "payment_methods_accepted") VALUES (OLD."name", OLD."plaza_id", OLD."category", OLD."id", NOW(), \'DELETE\', OLD."id", _pgh_attach_context(), (\n                SELECT "payment_methods_accepted"\n                FROM "test_common_audit_shop_auditevent"\n                WHERE pgh_id=(\n                    SELECT max(pgh_id) from test_common_audit_shop_auditevent where pgh_obj_id = OLD."id"\n                    )\n                ));\n                RETURN NULL;\n            ',
                    hash="922da25f362f9bbaaece1585c33b6b73807bc679",
                    operation="DELETE",
                    pgid="pgtrigger_test_common_audit_shop_delete_d2265",
                    table="test_common_audit_shop",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="shopauditevent",
            trigger=pgtrigger.compiler.Trigger(
                name="test_common_audit_shop_set_previous",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="NEW.pgh_previous_id = (SELECT max(pgh_id) from test_common_audit_shop_auditevent where pgh_obj_id = NEW.pgh_obj_id); RETURN NEW;",
                    hash="fb8d31c593c11ad979edc1f94643195cd376298e",
                    operation="INSERT",
                    pgid="pgtrigger_test_common_audit_shop_set_previous_1acc4",
                    table="test_common_audit_shop_auditevent",
                    when="BEFORE",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="supermemberprofile",
            trigger=pgtrigger.compiler.Trigger(
                name="test_common_audit_supermembe7ed459e5_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='\n                INSERT INTO "test_common_audit_super_member_profile_auditevent"\n                    ("memberprofile_ptr_id", "award_points", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_context_id") VALUES (NEW."memberprofile_ptr_id", NEW."award_points", NOW(), \'CREATE\', NEW."memberprofile_ptr_id", _pgh_attach_context());\n                RETURN NULL;\n            ',
                    hash="0c75f5079dd284ddcb4bcad0229eac30312a1a83",
                    operation="INSERT",
                    pgid="pgtrigger_test_common_audit_supermembe7ed459e5_insert_e79b4",
                    table="test_common_audit_super_member_profile",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="supermemberprofile",
            trigger=pgtrigger.compiler.Trigger(
                name="test_common_audit_supermembe7ed459e5_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."memberprofile_ptr_id" IS DISTINCT FROM NEW."memberprofile_ptr_id" OR OLD."award_points" IS DISTINCT FROM NEW."award_points")',
                    func='\n                INSERT INTO "test_common_audit_super_member_profile_auditevent"\n                    ("memberprofile_ptr_id", "award_points", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_context_id") VALUES (NEW."memberprofile_ptr_id", NEW."award_points", NOW(), \'UPDATE\', NEW."memberprofile_ptr_id", _pgh_attach_context());\n                RETURN NULL;\n            ',
                    hash="a15f4c3aef3656a33227c0b0ed75f14c16395457",
                    operation="UPDATE",
                    pgid="pgtrigger_test_common_audit_supermembe7ed459e5_update_64e31",
                    table="test_common_audit_super_member_profile",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="supermemberprofile",
            trigger=pgtrigger.compiler.Trigger(
                name="test_common_audit_supermembe7ed459e5_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='\n                INSERT INTO "test_common_audit_super_member_profile_auditevent"\n                    ("memberprofile_ptr_id", "award_points", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_context_id") VALUES (OLD."memberprofile_ptr_id", OLD."award_points", NOW(), \'DELETE\', OLD."memberprofile_ptr_id", _pgh_attach_context());\n                RETURN NULL;\n            ',
                    hash="80f85943764043cf1523adbe4c1f4385fd86cce0",
                    operation="DELETE",
                    pgid="pgtrigger_test_common_audit_supermembe7ed459e5_delete_ced49",
                    table="test_common_audit_super_member_profile",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="supermemberprofileauditevent",
            trigger=pgtrigger.compiler.Trigger(
                name="test_common_audit_supe7ed459e5_set_previous",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func="NEW.pgh_previous_id = (SELECT max(pgh_id) from test_common_audit_super_member_profile_auditevent where pgh_obj_id = NEW.pgh_obj_id); RETURN NEW;",
                    hash="ad610a5ec38858a397b339e46704397380108aa1",
                    operation="INSERT",
                    pgid="pgtrigger_test_common_audit_supe7ed459e5_set_previous_6bbf6",
                    table="test_common_audit_super_member_profile_auditevent",
                    when="BEFORE",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="test_common_audit_shop_payment_methods_accepted_auditeventproxy",
            trigger=pgtrigger.compiler.Trigger(
                name="test_common_audit_shop_paym49c05c27_m2m_add",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='\n                        INSERT INTO "test_common_audit_shop_auditevent" ("name", "plaza_id", "category", "id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_context_id", "payment_methods_accepted")\n                            SELECT "name", "plaza_id", "category", "id", NOW(), \'UPDATE\', NEW."shop_id", _pgh_attach_context(), (\n                                SELECT array_agg("paymentmethod_id")\n                                FROM test_common_audit_shop_payment_methods_accepted\n                                WHERE shop_id=NEW."shop_id"\n                            )\n                            FROM "test_common_audit_shop_auditevent"\n                            WHERE pgh_obj_id=NEW."shop_id"\n                            ORDER BY pgh_id DESC\n                            LIMIT 1;\n                        RETURN NULL;\n                    ',
                    hash="89596d7ecb0fa4dab58aaad128764910ff1e3b66",
                    operation="INSERT",
                    pgid="pgtrigger_test_common_audit_shop_paym49c05c27_m2m_add_0112b",
                    table="test_common_audit_shop_payment_methods_accepted",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="test_common_audit_shop_payment_methods_accepted_auditeventproxy",
            trigger=pgtrigger.compiler.Trigger(
                name="test_common_audit_shop_p49c05c27_m2m_remove",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='\n                        INSERT INTO "test_common_audit_shop_auditevent" ("name", "plaza_id", "category", "id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_context_id", "payment_methods_accepted")\n                            SELECT "name", "plaza_id", "category", "id", NOW(), \'UPDATE\', OLD."shop_id", _pgh_attach_context(), (\n                                SELECT array_agg("paymentmethod_id")\n                                FROM test_common_audit_shop_payment_methods_accepted\n                                WHERE shop_id=OLD."shop_id"\n                            )\n                            FROM "test_common_audit_shop_auditevent"\n                            WHERE pgh_obj_id=OLD."shop_id"\n                            ORDER BY pgh_id DESC\n                            LIMIT 1;\n                        RETURN NULL;\n                    ',
                    hash="b0f4cf26d81e06846f6b71b0673fb21f42026a97",
                    operation="DELETE",
                    pgid="pgtrigger_test_common_audit_shop_p49c05c27_m2m_remove_7903d",
                    table="test_common_audit_shop_payment_methods_accepted",
                    when="AFTER",
                ),
            ),
        ),
    ]
