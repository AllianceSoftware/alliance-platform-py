[project]
name = "alliance-platform"
version = "0.0.1"
dependencies = []
requires-python = ">=3.11"

[tool.setuptools]
py-modules = []

[tool.pdm.dev-dependencies]
dev = [
    "-e alliance-platform-frontend @ file:///${PROJECT_ROOT}/packages/ap-frontend",
    "-e alliance-platform-codegen @ file:///${PROJECT_ROOT}/packages/ap-codegen",
    "-e alliance-platform-codegen @ file:///${PROJECT_ROOT}/packages/ap-core",
    "beautifulsoup4<5.0,>=4.11",
    "django-stubs",
    "djangorestframework-stubs",
    "logging-tree",
    "mypy>=1.3",
    "packaging",
    "psycopg2",
    "rules",
    "types-Werkzeug",
    "types-beautifulsoup4",
    "types-factory-boy",
    "types-psycopg2",
    "types-requests",
    "types-setuptools",
    "tox",
    "tox-pdm>=0.7.2",
    "ruff",
]

[tool.ruff]
line-length = 110
target-version = 'py311'

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F", "I"]

[tool.ruff.lint.isort]
order-by-type = true
force-single-line = true
force-sort-within-sections = true

[tool.pdm.scripts]
frontend-test.cmd = "./manage.py test"
frontend-test.working_dir = "packages/ap-frontend"
frontend-mypy.cmd = "mypy ."
frontend-mypy.working_dir = "packages/ap-frontend"

codegen-test.cmd = "./manage.py test"
codegen-test.working_dir = "packages/ap-codegen"
codegen-mypy.cmd = "mypy ."
codegen-mypy.working_dir = "packages/ap-codegen"

core-mypy.cmd = "mypy ."
core-mypy.working_dir = "packages/ap-core"

test = {composite = ["frontend-test", "codegen-test"], keep_going = true}

mypy = {composite = ["codegen-mypy", "frontend-mypy", "core-mypy"], keep_going = true}
