name: Test CI

on: [pull_request]

jobs:

  linter:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.11]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup PDM
        uses: pdm-project/setup-pdm@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: true
      - name: Install project
        run: pdm install -d
      - name: Run linter
        run: pdm run ruff check
      - name: Run format check
        run: pdm run ruff format --check

  testing:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ['3.11', '3.12']
        os: [ubuntu-latest]

    services:
      postgres:
        # Docker Hub image
        image: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
        env:
          # Override Django DB settings
          POSTGRES_PASSWORD: postgres
          POSTGRES_HOST: localhost

    steps:
      - uses: actions/checkout@v4
      - name: Setup PDM
        uses: pdm-project/setup-pdm@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: true

      - uses: actions/checkout@v4
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install node dependencies (required for prettier formatting in tests)
        run: yarn install

      - name: Install dependencies
        run: |
          python -m pip install --upgrade tox

      - name: Set python version variable (short)
        id: pyver
        run: |
          echo "VER=${{ matrix.python-version }}" | sed -E 's/[.]//' >> $GITHUB_OUTPUT

      - name: Run Tests with py${{ matrix.python-version }}
        run: |
          tox -f test-py${{ steps.pyver.outputs.VER }}
        env:
          CI_SERVER: yes
          DB_HOST: localhost
          DB_PORT: ${{ job.services.postgres.ports[5432] }}
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_NAME: postgres
          NODE_MODULES_DIR: ${{ github.workspace }}/node_modules
