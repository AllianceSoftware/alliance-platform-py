name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    environment: release
    steps:
      - uses: actions/checkout@v4
      - name: Setup PDM
        uses: pdm-project/setup-pdm@v4
        with:
          python-version: 3.11
          cache: true

      - name: Setup Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: Install Dependencies
        run: yarn

      - name: Create Release Pull Request or Publish to pypi
        id: changesets
        uses: changesets/action@v1
        with:
          publish: pdm run scripts/publish.py
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PYPI_PUBLISH_REPO: testpypi
          # Use individual tokens so each token only has the permissions it needs. There's no option
          # in pypy to say a token has access to multiple repos - it's either all or a single repo.
          ALLIANCE_PLATFORM_FRONTEND_TOKEN: ${{ secrets.ALLIANCE_PLATFORM_FRONTEND_TOKEN }}
          ALLIANCE_PLATFORM_CORE_TOKEN: ${{ secrets.ALLIANCE_PLATFORM_CORE_TOKEN }}
          ALLIANCE_PLATFORM_CODEGEN_TOKEN: ${{ secrets.ALLIANCE_PLATFORM_CODEGEN_TOKEN }}

#      - name: Generate notification payload
#        id: notification
#        if: steps.changesets.outputs.published == 'true'
#        run: payload=$(node scripts/release-notifications.mjs '${{ steps.changesets.outputs.publishedPackages }}') && echo ::set-output name=payload::${payload//$'\n'/'%0A'}
#
#      - name: Send a Slack notification if a publish happens
#        if: steps.changesets.outputs.published == 'true'
#        uses: slackapi/slack-github-action@v1.25.0
#        with:
#          # For posting a rich message using Block Kit
#          payload: ${{ steps.notification.outputs.payload }}
#        env:
#          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
#          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
