# Generated by Django 4.2 on 2023-04-18 06:10

from django.db import migrations
import pgtrigger.compiler
import pgtrigger.migrations


class Migration(migrations.Migration):
    dependencies = [
        ("test_common_audit", "0006_pgtrigger_update"),
    ]

    operations = [
        pgtrigger.migrations.RemoveTrigger(
            model_name="authorprofile",
            name="test_common_audit_authorprofile_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="memberprofile",
            name="test_common_audit_memberprofile_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="paymentmethod",
            name="test_common_audit_paymentmethod_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="plaza",
            name="test_common_audit_plaza_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="profile",
            name="test_common_audit_profile_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="shop",
            name="test_common_audit_shop_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="supermemberprofile",
            name="test_common_audit_supermembe7ed459e5_update",
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="authorprofile",
            trigger=pgtrigger.compiler.Trigger(
                name="test_common_audit_authorprofile_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."profile_ptr_id" IS DISTINCT FROM (NEW."profile_ptr_id") OR OLD."homepage" IS DISTINCT FROM (NEW."homepage"))',
                    func='\n                INSERT INTO "test_common_audit_author_profile_auditevent"\n                    ("profile_ptr_id", "homepage", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_context_id") VALUES (NEW."profile_ptr_id", NEW."homepage", NOW(), \'UPDATE\', NEW."profile_ptr_id", _pgh_attach_context());\n                RETURN NULL;\n            ',
                    hash="4d7aa098cf908df09765bedc13ff53e78096dfc8",
                    operation="UPDATE",
                    pgid="pgtrigger_test_common_audit_authorprofile_update_953cd",
                    table="test_common_audit_author_profile",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="memberprofile",
            trigger=pgtrigger.compiler.Trigger(
                name="test_common_audit_memberprofile_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."profile_ptr_id" IS DISTINCT FROM (NEW."profile_ptr_id") OR OLD."member_id" IS DISTINCT FROM (NEW."member_id"))',
                    func='\n                INSERT INTO "test_common_audit_member_profile_auditevent"\n                    ("profile_ptr_id", "member_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_context_id") VALUES (NEW."profile_ptr_id", NEW."member_id", NOW(), \'UPDATE\', NEW."profile_ptr_id", _pgh_attach_context());\n                RETURN NULL;\n            ',
                    hash="0314af86d92d5909a47db9086ea6fb93fe1e7d55",
                    operation="UPDATE",
                    pgid="pgtrigger_test_common_audit_memberprofile_update_b380d",
                    table="test_common_audit_member_profile",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="paymentmethod",
            trigger=pgtrigger.compiler.Trigger(
                name="test_common_audit_paymentmethod_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."id" IS DISTINCT FROM (NEW."id") OR OLD."name" IS DISTINCT FROM (NEW."name"))',
                    func='\n                INSERT INTO "test_common_audit_payment_method_auditevent"\n                    ("id", "name", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_context_id") VALUES (NEW."id", NEW."name", NOW(), \'UPDATE\', NEW."id", _pgh_attach_context());\n                RETURN NULL;\n            ',
                    hash="cbcb72944f775c83b9b7bc1a658d1e4e9626dc4d",
                    operation="UPDATE",
                    pgid="pgtrigger_test_common_audit_paymentmethod_update_f8de6",
                    table="test_common_audit_payment_method",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="plaza",
            trigger=pgtrigger.compiler.Trigger(
                name="test_common_audit_plaza_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."id" IS DISTINCT FROM (NEW."id") OR OLD."name" IS DISTINCT FROM (NEW."name"))',
                    func='\n                INSERT INTO "test_common_audit_plaza_auditevent"\n                    ("id", "name", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_context_id") VALUES (NEW."id", NEW."name", NOW(), \'UPDATE\', NEW."id", _pgh_attach_context());\n                RETURN NULL;\n            ',
                    hash="d7bf35ff762d352093d692f19b462a517a3faa56",
                    operation="UPDATE",
                    pgid="pgtrigger_test_common_audit_plaza_update_225ee",
                    table="test_common_audit_plaza",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="profile",
            trigger=pgtrigger.compiler.Trigger(
                name="test_common_audit_profile_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."id" IS DISTINCT FROM (NEW."id") OR OLD."name" IS DISTINCT FROM (NEW."name"))',
                    func='\n                INSERT INTO "test_common_audit_profile_auditevent"\n                    ("id", "name", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_context_id") VALUES (NEW."id", NEW."name", NOW(), \'UPDATE\', NEW."id", _pgh_attach_context());\n                RETURN NULL;\n            ',
                    hash="211aa202351a6a02cc9b3500686284f6a6e68a63",
                    operation="UPDATE",
                    pgid="pgtrigger_test_common_audit_profile_update_c769c",
                    table="test_common_audit_profile",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="shop",
            trigger=pgtrigger.compiler.Trigger(
                name="test_common_audit_shop_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."id" IS DISTINCT FROM (NEW."id") OR OLD."name" IS DISTINCT FROM (NEW."name") OR OLD."plaza_id" IS DISTINCT FROM (NEW."plaza_id") OR OLD."category" IS DISTINCT FROM (NEW."category"))',
                    func='\n                INSERT INTO "test_common_audit_shop_auditevent"\n                    ("id", "name", "plaza_id", "category", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_context_id", "payment_methods_accepted") VALUES (NEW."id", NEW."name", NEW."plaza_id", NEW."category", NOW(), \'UPDATE\', NEW."id", _pgh_attach_context(), (\n                SELECT "payment_methods_accepted"\n                FROM "test_common_audit_shop_auditevent"\n                WHERE pgh_id=(\n                    SELECT max(pgh_id) from test_common_audit_shop_auditevent where pgh_obj_id = NEW."id"\n                    )\n                ));\n                RETURN NULL;\n            ',
                    hash="b036d1f4e212074d0a19d5bd87908de8b9ebcdd8",
                    operation="UPDATE",
                    pgid="pgtrigger_test_common_audit_shop_update_15b7b",
                    table="test_common_audit_shop",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="supermemberprofile",
            trigger=pgtrigger.compiler.Trigger(
                name="test_common_audit_supermembe7ed459e5_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."memberprofile_ptr_id" IS DISTINCT FROM (NEW."memberprofile_ptr_id") OR OLD."award_points" IS DISTINCT FROM (NEW."award_points"))',
                    func='\n                INSERT INTO "test_common_audit_super_member_profile_auditevent"\n                    ("memberprofile_ptr_id", "award_points", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_context_id") VALUES (NEW."memberprofile_ptr_id", NEW."award_points", NOW(), \'UPDATE\', NEW."memberprofile_ptr_id", _pgh_attach_context());\n                RETURN NULL;\n            ',
                    hash="71da4c908a366a8074d123b44b3cc2b8c5d66d0c",
                    operation="UPDATE",
                    pgid="pgtrigger_test_common_audit_supermembe7ed459e5_update_64e31",
                    table="test_common_audit_super_member_profile",
                    when="AFTER",
                ),
            ),
        ),
    ]
